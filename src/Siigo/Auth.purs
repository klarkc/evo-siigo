module Siigo.Auth where
--module Siigo.Auth (SiigoAuthHeaders, siigoAuth, baseUrl) where
--
--import Prelude
--  ( (<>)
--  , ($)
--  , bind
--  , pure
--  , discard
--  )
--import Effect.Aff (Aff)
--import Effect.Class (liftEffect)
--import Effect.Console (log)
--import Env (Environment)
--import Fetch.Response (handleResponse)
--import Fetch.Yoga.Json (fromJSON)
--
--baseUrl :: String
--baseUrl = "https://api.siigo.com"
--
--type SiigoAuthHeaders
--  = ( authorization :: String )
--
--siigoAuth :: Activity (Record SiigoAuthHeaders)
--siigoAuth fetch = do
--  username <- liftEffect $ env.lookupEnv "SIIGO_USERNAME"
--  access_key <- liftEffect $ env.lookupEnv "SIIGO_ACCESS_KEY"
--  let
--    url = baseUrl <> "/auth"
--
--    body = { username, access_key }
--
--    headers = {}
--
--    options = { body, headers }
--  liftEffect $ log $ "Fetching token" <> url
--  res <- env.fetch url (options)
--  token <- handleResponse res $ fromJSON res.json
--  pure { authorization: "Bearer " <> token }
